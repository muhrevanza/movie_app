apply plugin: 'com.android.application'
apply plugin: 'realm-android'

android {
    compileSdkVersion 32
    buildToolsVersion '32.0.0'
    defaultConfig {
        applicationId "com.etiennelawlor.moviehub"
        minSdkVersion 21
        targetSdkVersion 32
        versionCode 3
        versionName "0.0.3"
        // Enabling multidex support.
        multiDexEnabled true
//        multiDexKeepProguard file('multidex-keep.txt')
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            proguardFiles fileTree('proguard').asList().toArray()
        }
        debug {
            debuggable true
            minifyEnabled false
            // Run code coverage reports by default on debug builds.
            // Causes issue with debugger
//            testCoverageEnabled = true
            // Turns off code coverage but doesn't mess with debugger
            testCoverageEnabled = false
        }
    }
    lintOptions {
        checkReleaseBuilds true
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    // Encapsulates options for running tests.
    testOptions {
        // Encapsulates options for unit tests.
        unitTests {
            // Encapsulates options for controlling how Gradle executes unit tests.
            all {
                // Always show the result of every unit test, even if it passes.
                testLogging {
                    events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
                }
            }
        }
    }
    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/rxjava.properties'
    }
}

// Define versions in a single place
ext {
    // App dependencies
    supportLibraryVersion = '27.0.2'
    picassoVersion = '2.5.2'
    retrofit2Version = '2.3.0'
    okhttp3Version = '3.9.1'
    leakcanaryVersion = '1.5.4'
    butterknifeVersion = '8.8.1'
    timberVersion = '4.6.0'
    recyclerviewAnimatorsVersion = '2.0.0' // Update at some point
    trestleVersion = '0.0.8'
    multidexVersion = '1.0.2'
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    rxjava2RxandroidVersion = '2.0.1'
    rxjava2Version = '2.1.7'
    rxbinding2Version = '2.0.0'

    // Test dependencies
    junitVersion = '4.12'
    mockitoVersion = '2.0.2-beta' // Update at some point
    powerMockVersion = '1.7.3'
    hamcrestVersion = '1.3'
    runnerVersion = '1.0.1'
    rulesVersion = '1.0.1'
    espressoVersion = '3.0.1'
    supportAnnotations = '24.2.0'
//    mockwebserver = '3.9.1'
}

/*
 Dependency versions are defined in the top level build.gradle file. This helps keeping track of
 all versions in a single place. This improves readability and helps managing project complexity.
 */
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "com.squareup.picasso:picasso:$picassoVersion"
    implementation "com.squareup.retrofit2:retrofit:retrofit2Version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit2Version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.3.0"
    implementation "com.squareup.okhttp3:okhttp:$okhttp3Version"
    implementation "com.squareup.okhttp3:mockwebserver:$okhttp3Version"
    implementation "com.squareup.okhttp3:okhttp-urlconnection:$okhttp3Version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3Version"
    debugImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanaryVersion"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanaryVersion"

    implementation "com.android.support:design:$supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$supportLibraryVersion"
    implementation "com.android.support:palette-v7:$supportLibraryVersion"
    implementation "com.android.support:support-v4:$supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$supportLibraryVersion"

    implementation "com.jakewharton:butterknife:$butterknifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterknifeVersion"
//    apt 'com.jakewharton:butterknife-compiler:$butterknifeVersion'
    implementation "com.jakewharton.timber:timber:$timberVersion"

    implementation "jp.wasabeef:recyclerview-animators:$recyclerviewAnimatorsVersion" // Stable

    implementation "com.github.lawloretienne:trestle:$trestleVersion"

    implementation "com.android.support:multidex:$multidexVersion" //

    // Dagger
    implementation 'com.google.dagger:dagger:2.14.1'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.14.1'
    testAnnotationProcessor 'com.google.dagger:dagger-compiler:2.14.1'

    implementation "io.reactivex.rxjava2:rxjava:$rxjava2Version" // RxJava
    implementation "io.reactivex.rxjava2:rxandroid:$rxjava2RxandroidVersion" // RxAndroid providing Android Scheduler
    implementation "com.jakewharton.rxbinding2:rxbinding:$rxbinding2Version"

    // Dependencies for local unit tests
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.mockito:mockito-all:$mockitoVersion"
    testImplementation "org.hamcrest:hamcrest-all:$hamcrestVersion"
    testImplementation "org.powermock:powermock-module-junit4:$powerMockVersion"
    testImplementation "org.powermock:powermock-api-mockito:$powerMockVersion"

    // Required for instrumented tests
    androidTestImplementation "com.android.support:support-annotations:$supportAnnotations"

    // Android Testing Support Library's runner and rules
    androidTestImplementation "com.android.support.test:runner:$runnerVersion"
    androidTestImplementation "com.android.support.test:rules:$rulesVersion"

    // Espresso UI Testing dependencies.
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espressoVersion"
//    androidTestImplementation("com.android.support.test.espresso:espresso-core:$espressoVersion", {
//        exclude group: 'com.android.support', module: 'support-annotations'
//        exclude group: 'com.android.support', module: 'appcompat'
//        exclude module: 'recyclerview-v7'
//    })
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:$espressoVersion"
    implementation "com.android.support.test.espresso:espresso-idling-resource:$espressoVersion"

//    debugImplementation "com.android.support.test.espresso.idling:idling-concurrent:$espressoVersion"
//    debugImplementation ("com.android.support.test.espresso.idling:idling-concurrent:$espressoVersion"){
//        exclude module: 'support-annotations'
//    }

    // UI testing with UI Automator
//    androidTestImplementation 'com.android.support.test.uiautomator:uiautomator-v18:2.1.2'

//    testImplementation "com.squareup.okhttp3:mockwebserver:$mockwebserver"
}

/*
Resolves dependency versions across test and production APKs, specifically, transitive
dependencies. This is required since Espresso internally has a dependency on support-annotations.
*/
configurations.all {
    resolutionStrategy.force "com.android.support:support-annotations:$supportLibraryVersion"
}

/*
All direct/transitive dependencies shared between your test and production APKs need to be
excluded from the test APK! This is necessary because both APKs will contain the same classes. Not
excluding these dependencies from your test configuration will result in an dex pre-verifier error
at runtime. More info in this tools bug: (https://code.google.com/p/android/issues/detail?id=192497)
*/
//configurations.implementation.dependencies.all { implementationDependency ->
//    println "Excluding implementation dependency: ${implementationDependency.getName()}"
//    configurations.androidTestImplementation.dependencies.all { androidTestImplementationDependency ->
//        configurations.androidTestImplementation.exclude module: "${implementationDependency.getName()}"
//    }
//}
